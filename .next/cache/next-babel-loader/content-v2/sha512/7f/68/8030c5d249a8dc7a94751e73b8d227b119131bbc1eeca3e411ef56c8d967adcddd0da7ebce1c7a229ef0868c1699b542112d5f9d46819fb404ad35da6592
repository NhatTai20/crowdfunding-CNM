{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\CNM\\\\CROWDFUNDING\\\\crowdfunding-CNM\\\\components\\\\contributeform.jsx\";\nimport React, { useState } from 'react';\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\nimport { Router } from '../routes';\nimport Camapign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nconst ContributeForm = props => {\n  const {\n    0: contribution,\n    1: setContribution\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState('');\n\n  const contribute = async event => {\n    event.preventDefault();\n    setErrorMessage('');\n    setLoading(true);\n    const campaign = Camapign(props.address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.contribute().send({\n        from: accounts[0],\n        value: web3.utils.toWei(contribution, 'ether')\n      }); // refresh page\n\n      Router.replaceRoute(`/campaigns/${props.address}`);\n    } catch (err) {\n      setErrorMessage(err.message);\n    }\n\n    setLoading(false);\n    setContribution('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: contribute,\n    error: !!errorMessage,\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount to contribute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"ether\",\n        labelPosition: \"right\",\n        value: contribution,\n        onChange: event => setContribution(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      loading: loading,\n      children: \"Contribute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ContributeForm;","map":{"version":3,"sources":["D:/CNM/CROWDFUNDING/crowdfunding-CNM/components/contributeform.jsx"],"names":["React","useState","Button","Form","Input","Message","Router","Camapign","web3","ContributeForm","props","contribution","setContribution","loading","setLoading","errorMessage","setErrorMessage","contribute","event","preventDefault","campaign","address","accounts","eth","getAccounts","methods","send","from","value","utils","toWei","replaceRoute","err","message","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACc,YAAD;AAAA,OAAeC;AAAf,MAAkCf,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMgB,UAAU,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;AAEAH,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMM,QAAQ,GAAGb,QAAQ,CAACG,KAAK,CAACW,OAAP,CAAzB;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACe,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMJ,QAAQ,CAACK,OAAT,CACHR,UADG,GAEHS,IAFG,CAEE;AACJC,QAAAA,IAAI,EAAEL,QAAQ,CAAC,CAAD,CADV;AAEJM,QAAAA,KAAK,EAAEpB,IAAI,CAACqB,KAAL,CAAWC,KAAX,CAAiBnB,YAAjB,EAA+B,OAA/B;AAFH,OAFF,CAAN,CAFE,CAQF;;AACAL,MAAAA,MAAM,CAACyB,YAAP,CAAqB,cAAarB,KAAK,CAACW,OAAQ,EAAhD;AACD,KAVD,CAUE,OAAOW,GAAP,EAAY;AACZhB,MAAAA,eAAe,CAACgB,GAAG,CAACC,OAAL,CAAf;AACD;;AAEDnB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GAtBD;;AAwBA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEK,UAAhB;AAA4B,IAAA,KAAK,EAAE,CAAC,CAACF,YAArC;AAAA,4BACE,QAAC,IAAD,CAAM,KAAN;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,aAAa,EAAC,OAFhB;AAGE,QAAA,KAAK,EAAEJ,YAHT;AAIE,QAAA,QAAQ,EAAEO,KAAK,IAAIN,eAAe,CAACM,KAAK,CAACgB,MAAN,CAAaN,KAAd;AAJpC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,OAAtB;AAA8B,MAAA,OAAO,EAAEb;AAAvC;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAEF,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA9CD;;AAgDA,eAAeJ,cAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\r\nimport { Router } from '../routes';\r\nimport Camapign from '../ethereum/campaign';\r\nimport web3 from '../ethereum/web3';\r\n\r\nconst ContributeForm = (props) => {\r\n  const [contribution, setContribution] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const contribute = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    setErrorMessage('');\r\n    setLoading(true);\r\n    const campaign = Camapign(props.address);\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await campaign.methods\r\n        .contribute()\r\n        .send({\r\n          from: accounts[0],\r\n          value: web3.utils.toWei(contribution, 'ether')\r\n        });\r\n      // refresh page\r\n      Router.replaceRoute(`/campaigns/${props.address}`);\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n    }\r\n\r\n    setLoading(false);\r\n    setContribution('');\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={contribute} error={!!errorMessage}>\r\n      <Form.Field>\r\n        <label>Amount to contribute</label>\r\n        <Input\r\n          label=\"ether\"\r\n          labelPosition=\"right\"\r\n          value={contribution}\r\n          onChange={event => setContribution(event.target.value)}\r\n        />\r\n      </Form.Field>\r\n      <Message error header=\"Oops!\" content={errorMessage} />\r\n      <Button primary loading={loading}>\r\n        Contribute\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default ContributeForm"]},"metadata":{},"sourceType":"module"}