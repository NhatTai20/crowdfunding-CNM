{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\CNM\\\\prj git\\\\blockchain-crowd\\\\pages\\\\campaigns\\\\requests\\\\index.jsx\";\nimport React from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport Layout from '../../../components/layout';\nimport { Link } from '../../../routes';\nimport Campaign from '../../../ethereum/campaign';\nimport RequestRow from '../../../components/requestrow';\n\nconst RequestIndex = props => {\n  const {\n    Header,\n    Row,\n    HeaderCell,\n    Body\n  } = Table;\n\n  const renderRows = () => {\n    const requests = JSON.parse(props.requests);\n    return requests.map((request, index) => {\n      return /*#__PURE__*/_jsxDEV(RequestRow, {\n        request: request,\n        address: props.address,\n        id: index,\n        approversCount: props.approversCount\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      route: `/campaigns/${props.address}/requests/new`,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          floated: \"right\",\n          style: {\n            marginBottom: 10\n          },\n          children: \"Add Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Approval Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Finalize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Body, {\n        children: renderRows()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Found \", props.requestCount, \" requests.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps(props) {\n  const campaignAddress = props.query.address;\n  const campaign = Campaign(campaignAddress);\n  const requestCount = await campaign.methods.requestCount().call();\n  const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((_, index) => {\n    return campaign.methods.requests(index).call();\n  }));\n  const approversCount = await campaign.methods.approversCount().call();\n  return {\n    props: {\n      address: campaignAddress,\n      requests: JSON.stringify(requests),\n      approversCount,\n      requestCount\n    }\n  };\n}\nexport default RequestIndex;","map":{"version":3,"sources":["D:/CNM/prj git/blockchain-crowd/pages/campaigns/requests/index.jsx"],"names":["React","Button","Table","Layout","Link","Campaign","RequestRow","RequestIndex","props","Header","Row","HeaderCell","Body","renderRows","requests","JSON","parse","map","request","index","address","approversCount","marginBottom","requestCount","getServerSideProps","campaignAddress","query","campaign","methods","call","Promise","all","Array","parseInt","fill","_","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Table } from 'semantic-ui-react';\r\nimport Layout from '../../../components/layout';\r\nimport { Link } from '../../../routes';\r\nimport Campaign from '../../../ethereum/campaign';\r\nimport RequestRow from '../../../components/requestrow';\r\n\r\nconst RequestIndex = (props) => {\r\n  const { Header, Row, HeaderCell, Body} = Table;\r\n\r\n  const renderRows = () => {\r\n    const requests = JSON.parse(props.requests);\r\n    return requests.map((request, index) => {\r\n      return <RequestRow\r\n        key={index}\r\n        request={request}\r\n        address={props.address}\r\n        id = {index}\r\n        approversCount={props.approversCount}\r\n      />\r\n    })\r\n  }\r\n\r\n  return(\r\n    <Layout>\r\n      <h3>Requests</h3>\r\n      <Link route={`/campaigns/${props.address}/requests/new`}>\r\n        <a>\r\n          <Button primary floated='right' style={{ marginBottom: 10 }}>Add Request</Button>\r\n        </a>\r\n      </Link>\r\n      <Table>\r\n        <Header>\r\n          <Row>\r\n            <HeaderCell>Id</HeaderCell>\r\n            <HeaderCell>Description</HeaderCell>\r\n            <HeaderCell>Amount</HeaderCell>\r\n            <HeaderCell>Recipient</HeaderCell>\r\n            <HeaderCell>Approval Count</HeaderCell>\r\n            <HeaderCell>Approve</HeaderCell>\r\n            <HeaderCell>Finalize</HeaderCell>\r\n          </Row>\r\n        </Header>\r\n        <Body>\r\n          {renderRows()}\r\n        </Body>\r\n      </Table>\r\n      <div>\r\n        Found {props.requestCount} requests.\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport async function getServerSideProps(props) {\r\n  const campaignAddress = props.query.address; \r\n  const campaign = Campaign(campaignAddress);\r\n\r\n  const requestCount = await campaign.methods.requestCount().call();\r\n  const requests = await Promise.all(\r\n    Array(parseInt(requestCount))\r\n      .fill()\r\n      .map((_, index) => {\r\n        return campaign.methods.requests(index).call();\r\n      })\r\n  );\r\n  const approversCount = await campaign.methods\r\n      .approversCount()\r\n      .call();\r\n\r\n  return {\r\n    props : {\r\n      address: campaignAddress,\r\n      requests: JSON.stringify(requests),\r\n      approversCount,\r\n      requestCount\r\n    }\r\n  };\r\n}\r\n\r\nexport default RequestIndex;"]},"metadata":{},"sourceType":"module"}