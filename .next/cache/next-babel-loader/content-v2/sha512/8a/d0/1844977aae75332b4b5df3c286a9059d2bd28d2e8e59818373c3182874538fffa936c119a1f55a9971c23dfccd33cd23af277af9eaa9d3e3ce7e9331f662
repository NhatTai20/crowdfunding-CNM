{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\CNM\\\\prj git\\\\blockchain-crowd\\\\components\\\\requestrow.jsx\";\nimport React from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\n\nconst RequestRow = props => {\n  const {\n    Row,\n    Cell\n  } = Table;\n  const {\n    id,\n    request,\n    approversCount\n  } = props;\n  const readyToFinalize = request.approvalCount > approversCount / 2;\n\n  const onApprove = async () => {\n    await executeOnBlockchain('approveRequest');\n  };\n\n  const onFinalize = async () => {\n    await executeOnBlockchain('finalizeRequest');\n  };\n\n  const executeOnBlockchain = async method => {\n    const campaign = Campaign(props.address);\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods[method](id).send({\n      from: accounts[0]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    disabled: request.complete,\n    positive: readyToFinalize && !request.complete,\n    children: [/*#__PURE__*/_jsxDEV(Cell, {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      textAlign: \"right\",\n      children: web3.utils.fromWei(request.value, 'ether')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.recipient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      textAlign: \"right\",\n      children: [request.approvalCount, \" / \", approversCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: !request.complete && /*#__PURE__*/_jsxDEV(Button, {\n        basic: true,\n        color: \"green\",\n        onClick: onApprove,\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: !request.complete && readyToFinalize && /*#__PURE__*/_jsxDEV(Button, {\n        color: \"teal\",\n        basic: true,\n        onClick: onFinalize,\n        children: \"Finalize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RequestRow;","map":{"version":3,"sources":["D:/CNM/prj git/blockchain-crowd/components/requestrow.jsx"],"names":["React","Button","Table","web3","Campaign","RequestRow","props","Row","Cell","id","request","approversCount","readyToFinalize","approvalCount","onApprove","executeOnBlockchain","onFinalize","method","campaign","address","accounts","eth","getAccounts","methods","send","from","complete","description","utils","fromWei","value","recipient"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAgBN,KAAtB;AACA,QAAM;AAAEO,IAAAA,EAAF;AAAMC,IAAAA,OAAN;AAAeC,IAAAA;AAAf,MAAiCL,KAAvC;AACA,QAAMM,eAAe,GAAGF,OAAO,CAACG,aAAR,GAAwBF,cAAc,GAAG,CAAjE;;AAEA,QAAMG,SAAS,GAAG,YAAY;AAC5B,UAAMC,mBAAmB,CAAC,gBAAD,CAAzB;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMD,mBAAmB,CAAC,iBAAD,CAAzB;AACD,GAFD;;AAIA,QAAMA,mBAAmB,GAAG,MAAOE,MAAP,IAAkB;AAC5C,UAAMC,QAAQ,GAAGd,QAAQ,CAACE,KAAK,CAACa,OAAP,CAAzB;AACA,UAAMC,QAAQ,GAAG,MAAMjB,IAAI,CAACkB,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMJ,QAAQ,CAACK,OAAT,CAAiBN,MAAjB,EAAyBR,EAAzB,EACHe,IADG,CACE;AACJC,MAAAA,IAAI,EAAEL,QAAQ,CAAC,CAAD;AADV,KADF,CAAN;AAID,GAPD;;AASA,sBACE,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAEV,OAAO,CAACgB,QAAvB;AAAiC,IAAA,QAAQ,EAAEd,eAAe,IAAI,CAACF,OAAO,CAACgB,QAAvE;AAAA,4BACE,QAAC,IAAD;AAAA,gBAAOjB;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,gBAAOC,OAAO,CAACiB;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,gBACGxB,IAAI,CAACyB,KAAL,CAAWC,OAAX,CAAmBnB,OAAO,CAACoB,KAA3B,EAAkC,OAAlC;AADH;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,IAAD;AAAA,gBAAOpB,OAAO,CAACqB;AAAf;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,iBACGrB,OAAO,CAACG,aADX,SAC6BF,cAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,IAAD;AAAA,gBACI,CAACD,OAAO,CAACgB,QAAT,iBACA,QAAC,MAAD;AAAQ,QAAA,KAAK,MAAb;AAAc,QAAA,KAAK,EAAC,OAApB;AAA4B,QAAA,OAAO,EAAEZ,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAVF,eAeE,QAAC,IAAD;AAAA,gBACI,CAACJ,OAAO,CAACgB,QAAT,IAAqBd,eAArB,iBACA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,KAAK,MAA1B;AAA2B,QAAA,OAAO,EAAEI,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA7CD;;AA+CA,eAAeX,UAAf","sourcesContent":["import React from 'react';\r\nimport { Button, Table } from 'semantic-ui-react';\r\nimport web3 from '../ethereum/web3'; \r\nimport Campaign from '../ethereum/campaign';\r\n\r\nconst RequestRow = (props) => {\r\n  const { Row, Cell } = Table;\r\n  const { id, request, approversCount} = props;\r\n  const readyToFinalize = request.approvalCount > approversCount / 2;\r\n\r\n  const onApprove = async () => {\r\n    await executeOnBlockchain('approveRequest');\r\n  }\r\n\r\n  const onFinalize = async () => {\r\n    await executeOnBlockchain('finalizeRequest');\r\n  }\r\n\r\n  const executeOnBlockchain = async (method) => {\r\n    const campaign = Campaign(props.address);\r\n    const accounts = await web3.eth.getAccounts();\r\n    await campaign.methods[method](id)\r\n      .send({\r\n        from: accounts[0]\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Row disabled={request.complete} positive={readyToFinalize && !request.complete}>\r\n      <Cell>{id}</Cell>\r\n      <Cell>{request.description}</Cell>\r\n      <Cell textAlign='right'>\r\n        {web3.utils.fromWei(request.value, 'ether')}\r\n      </Cell>\r\n      <Cell>{request.recipient}</Cell>\r\n      <Cell textAlign='right'>\r\n        {request.approvalCount} / {approversCount}\r\n      </Cell>\r\n      <Cell>\r\n        { !request.complete &&\r\n          <Button basic color='green' onClick={onApprove}>Approve</Button>\r\n        } \r\n      </Cell>\r\n      <Cell>\r\n        { !request.complete && readyToFinalize &&\r\n          <Button color='teal' basic onClick={onFinalize}>Finalize</Button>\r\n        }\r\n      </Cell>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default RequestRow;"]},"metadata":{},"sourceType":"module"}